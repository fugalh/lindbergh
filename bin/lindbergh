#! /opt/local/bin/ruby
require 'lindbergh'
require 'optparse'
require 'ostruct'
require 'pathname'
require 'yaml'

opts = OpenStruct.new(:db => Pathname.new("data/lindbergh.db"))
OptionParser.new do |o|
  o.banner = "usage: #{$0} [options] flight_plan.txt"
  o.on("-f", "--database=PATH", "Lindbergh database to use") do |v| 
    opts.db = Pathname.new(v)
  end
  o.on("-r", "--rebuild=PATH", "Rebuild the database,", 
       "using PATH/{apt,nav,fix}.dat.gz","(no flight plan)") do |v| 
    opts.rebuild = true; opts.rebuild_path = Pathname.new(v)
  end
  o.on("-h", "--help") { puts o; exit }
end.parse!

if opts.rebuild
  Aviation::Checkpoint.open(opts.db, true)
  Aviation::Checkpoint.parse(opts.rebuild_path)
else
  Aviation::Checkpoint.open(opts.db, false)
  pf = PlanParser.new.parse(ARGF.read)

  pf.each {|p| puts p.to_s}
end
